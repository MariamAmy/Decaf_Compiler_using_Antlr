// Generated from /home/mariam/year 4/year 4 sem 2/Compilers/Lab/Project/PA_1/src/Decaf.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class DecafLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, CLASS=5, VOID=6, INT=7, BOOLEAN=8, IF=9, 
		ELSE=10, WHILE=11, FOR=12, RETURN=13, BREAK=14, CONTINUE=15, CALLOUT=16, 
		ID=17, CHAR_LITERAL=18, STRING_LITERAL=19, LEFT_BRACE=20, RIGHT_BRACE=21, 
		LEFT_BRACKET=22, RIGHT_BRACKET=23, LEFT_PAR=24, RIGHT_PAR=25, COMMA=26, 
		SEMICOLON=27, ASSIGN_OP=28, INC_then_ASSIGN=29, DEC_then_ASSIGN=30, ARITHMETIC_OP=31, 
		REL_OP=32, EQ_OP=33, COND_OP_AND=34, COND_OP_OR=35, WHITESPACE=36, HEX=37, 
		In=38, BOOL=39;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "CLASS", "VOID", "INT", "BOOLEAN", "IF", 
			"ELSE", "WHILE", "FOR", "RETURN", "BREAK", "CONTINUE", "CALLOUT", "ALPHA", 
			"ID", "CHAR_LITERAL", "STRING_LITERAL", "LEFT_BRACE", "RIGHT_BRACE", 
			"LEFT_BRACKET", "RIGHT_BRACKET", "LEFT_PAR", "RIGHT_PAR", "COMMA", "SEMICOLON", 
			"ASSIGN_OP", "INC_then_ASSIGN", "DEC_then_ASSIGN", "ARITHMETIC_OP", "REL_OP", 
			"EQ_OP", "COND_OP_AND", "COND_OP_OR", "WHITESPACE", "HEX_DIGIT", "HEX", 
			"In", "BOOL", "CHAR_", "ESC_SEQ", "DIGIT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'Program'", "'-'", "'!'", "'.'", "'class'", "'void'", "'int'", 
			"'boolean'", "'if'", "'else'", "'while'", "'for'", "'return'", "'break'", 
			"'continue'", "'callout'", null, null, null, "'{'", "'}'", "'['", "']'", 
			"'('", "')'", "','", "';'", "'='", "'+='", "'-='", null, null, null, 
			"'&&'", "'||'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, "CLASS", "VOID", "INT", "BOOLEAN", "IF", 
			"ELSE", "WHILE", "FOR", "RETURN", "BREAK", "CONTINUE", "CALLOUT", "ID", 
			"CHAR_LITERAL", "STRING_LITERAL", "LEFT_BRACE", "RIGHT_BRACE", "LEFT_BRACKET", 
			"RIGHT_BRACKET", "LEFT_PAR", "RIGHT_PAR", "COMMA", "SEMICOLON", "ASSIGN_OP", 
			"INC_then_ASSIGN", "DEC_then_ASSIGN", "ARITHMETIC_OP", "REL_OP", "EQ_OP", 
			"COND_OP_AND", "COND_OP_OR", "WHITESPACE", "HEX", "In", "BOOL"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public DecafLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Decaf.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\'\u011e\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0005\u0011\u00b4\b\u0011\n\u0011"+
		"\f\u0011\u00b7\t\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012"+
		"\u0001\u0013\u0001\u0013\u0001\u0013\u0005\u0013\u00c0\b\u0013\n\u0013"+
		"\f\u0013\u00c3\t\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014"+
		"\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017"+
		"\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a"+
		"\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d"+
		"\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f"+
		"\u0001 \u0001 \u0001 \u0001 \u0001 \u0003 \u00e6\b \u0001!\u0001!\u0001"+
		"!\u0001!\u0003!\u00ec\b!\u0001\"\u0001\"\u0001\"\u0001#\u0001#\u0001#"+
		"\u0001$\u0001$\u0001$\u0001$\u0001%\u0001%\u0001&\u0001&\u0001&\u0001"+
		"&\u0004&\u00fe\b&\u000b&\f&\u00ff\u0001\'\u0004\'\u0103\b\'\u000b\'\f"+
		"\'\u0104\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001"+
		"(\u0003(\u0110\b(\u0001)\u0001)\u0001)\u0003)\u0115\b)\u0001*\u0001*\u0001"+
		"*\u0001+\u0004+\u011b\b+\u000b+\f+\u011c\u0000\u0000,\u0001\u0001\u0003"+
		"\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011"+
		"\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010"+
		"!\u0000#\u0011%\u0012\'\u0013)\u0014+\u0015-\u0016/\u00171\u00183\u0019"+
		"5\u001a7\u001b9\u001c;\u001d=\u001e?\u001fA C!E\"G#I$K\u0000M%O&Q\'S\u0000"+
		"U\u0000W\u0000\u0001\u0000\b\u0003\u0000AZ__az\u0004\u0000%%*+--//\u0002"+
		"\u0000<<>>\u0002\u0000\t\n  \u0003\u000009AFaf\u0003\u0000\"\"\'\'\\\\"+
		"\u0005\u0000\"\"\'\'\\\\nntt\u0001\u000009\u0124\u0000\u0001\u0001\u0000"+
		"\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000"+
		"\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000"+
		"\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000"+
		"\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000"+
		"\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000"+
		"\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000"+
		"\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000"+
		"\u0000\u001f\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001"+
		"\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000"+
		"\u0000\u0000M\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000"+
		"Q\u0001\u0000\u0000\u0000\u0001Y\u0001\u0000\u0000\u0000\u0003a\u0001"+
		"\u0000\u0000\u0000\u0005c\u0001\u0000\u0000\u0000\u0007e\u0001\u0000\u0000"+
		"\u0000\tg\u0001\u0000\u0000\u0000\u000bm\u0001\u0000\u0000\u0000\rr\u0001"+
		"\u0000\u0000\u0000\u000fv\u0001\u0000\u0000\u0000\u0011~\u0001\u0000\u0000"+
		"\u0000\u0013\u0081\u0001\u0000\u0000\u0000\u0015\u0086\u0001\u0000\u0000"+
		"\u0000\u0017\u008c\u0001\u0000\u0000\u0000\u0019\u0090\u0001\u0000\u0000"+
		"\u0000\u001b\u0097\u0001\u0000\u0000\u0000\u001d\u009d\u0001\u0000\u0000"+
		"\u0000\u001f\u00a6\u0001\u0000\u0000\u0000!\u00ae\u0001\u0000\u0000\u0000"+
		"#\u00b0\u0001\u0000\u0000\u0000%\u00b8\u0001\u0000\u0000\u0000\'\u00bc"+
		"\u0001\u0000\u0000\u0000)\u00c6\u0001\u0000\u0000\u0000+\u00c8\u0001\u0000"+
		"\u0000\u0000-\u00ca\u0001\u0000\u0000\u0000/\u00cc\u0001\u0000\u0000\u0000"+
		"1\u00ce\u0001\u0000\u0000\u00003\u00d0\u0001\u0000\u0000\u00005\u00d2"+
		"\u0001\u0000\u0000\u00007\u00d4\u0001\u0000\u0000\u00009\u00d6\u0001\u0000"+
		"\u0000\u0000;\u00d8\u0001\u0000\u0000\u0000=\u00db\u0001\u0000\u0000\u0000"+
		"?\u00de\u0001\u0000\u0000\u0000A\u00e5\u0001\u0000\u0000\u0000C\u00eb"+
		"\u0001\u0000\u0000\u0000E\u00ed\u0001\u0000\u0000\u0000G\u00f0\u0001\u0000"+
		"\u0000\u0000I\u00f3\u0001\u0000\u0000\u0000K\u00f7\u0001\u0000\u0000\u0000"+
		"M\u00f9\u0001\u0000\u0000\u0000O\u0102\u0001\u0000\u0000\u0000Q\u010f"+
		"\u0001\u0000\u0000\u0000S\u0114\u0001\u0000\u0000\u0000U\u0116\u0001\u0000"+
		"\u0000\u0000W\u011a\u0001\u0000\u0000\u0000YZ\u0005P\u0000\u0000Z[\u0005"+
		"r\u0000\u0000[\\\u0005o\u0000\u0000\\]\u0005g\u0000\u0000]^\u0005r\u0000"+
		"\u0000^_\u0005a\u0000\u0000_`\u0005m\u0000\u0000`\u0002\u0001\u0000\u0000"+
		"\u0000ab\u0005-\u0000\u0000b\u0004\u0001\u0000\u0000\u0000cd\u0005!\u0000"+
		"\u0000d\u0006\u0001\u0000\u0000\u0000ef\u0005.\u0000\u0000f\b\u0001\u0000"+
		"\u0000\u0000gh\u0005c\u0000\u0000hi\u0005l\u0000\u0000ij\u0005a\u0000"+
		"\u0000jk\u0005s\u0000\u0000kl\u0005s\u0000\u0000l\n\u0001\u0000\u0000"+
		"\u0000mn\u0005v\u0000\u0000no\u0005o\u0000\u0000op\u0005i\u0000\u0000"+
		"pq\u0005d\u0000\u0000q\f\u0001\u0000\u0000\u0000rs\u0005i\u0000\u0000"+
		"st\u0005n\u0000\u0000tu\u0005t\u0000\u0000u\u000e\u0001\u0000\u0000\u0000"+
		"vw\u0005b\u0000\u0000wx\u0005o\u0000\u0000xy\u0005o\u0000\u0000yz\u0005"+
		"l\u0000\u0000z{\u0005e\u0000\u0000{|\u0005a\u0000\u0000|}\u0005n\u0000"+
		"\u0000}\u0010\u0001\u0000\u0000\u0000~\u007f\u0005i\u0000\u0000\u007f"+
		"\u0080\u0005f\u0000\u0000\u0080\u0012\u0001\u0000\u0000\u0000\u0081\u0082"+
		"\u0005e\u0000\u0000\u0082\u0083\u0005l\u0000\u0000\u0083\u0084\u0005s"+
		"\u0000\u0000\u0084\u0085\u0005e\u0000\u0000\u0085\u0014\u0001\u0000\u0000"+
		"\u0000\u0086\u0087\u0005w\u0000\u0000\u0087\u0088\u0005h\u0000\u0000\u0088"+
		"\u0089\u0005i\u0000\u0000\u0089\u008a\u0005l\u0000\u0000\u008a\u008b\u0005"+
		"e\u0000\u0000\u008b\u0016\u0001\u0000\u0000\u0000\u008c\u008d\u0005f\u0000"+
		"\u0000\u008d\u008e\u0005o\u0000\u0000\u008e\u008f\u0005r\u0000\u0000\u008f"+
		"\u0018\u0001\u0000\u0000\u0000\u0090\u0091\u0005r\u0000\u0000\u0091\u0092"+
		"\u0005e\u0000\u0000\u0092\u0093\u0005t\u0000\u0000\u0093\u0094\u0005u"+
		"\u0000\u0000\u0094\u0095\u0005r\u0000\u0000\u0095\u0096\u0005n\u0000\u0000"+
		"\u0096\u001a\u0001\u0000\u0000\u0000\u0097\u0098\u0005b\u0000\u0000\u0098"+
		"\u0099\u0005r\u0000\u0000\u0099\u009a\u0005e\u0000\u0000\u009a\u009b\u0005"+
		"a\u0000\u0000\u009b\u009c\u0005k\u0000\u0000\u009c\u001c\u0001\u0000\u0000"+
		"\u0000\u009d\u009e\u0005c\u0000\u0000\u009e\u009f\u0005o\u0000\u0000\u009f"+
		"\u00a0\u0005n\u0000\u0000\u00a0\u00a1\u0005t\u0000\u0000\u00a1\u00a2\u0005"+
		"i\u0000\u0000\u00a2\u00a3\u0005n\u0000\u0000\u00a3\u00a4\u0005u\u0000"+
		"\u0000\u00a4\u00a5\u0005e\u0000\u0000\u00a5\u001e\u0001\u0000\u0000\u0000"+
		"\u00a6\u00a7\u0005c\u0000\u0000\u00a7\u00a8\u0005a\u0000\u0000\u00a8\u00a9"+
		"\u0005l\u0000\u0000\u00a9\u00aa\u0005l\u0000\u0000\u00aa\u00ab\u0005o"+
		"\u0000\u0000\u00ab\u00ac\u0005u\u0000\u0000\u00ac\u00ad\u0005t\u0000\u0000"+
		"\u00ad \u0001\u0000\u0000\u0000\u00ae\u00af\u0007\u0000\u0000\u0000\u00af"+
		"\"\u0001\u0000\u0000\u0000\u00b0\u00b5\u0003!\u0010\u0000\u00b1\u00b4"+
		"\u0003!\u0010\u0000\u00b2\u00b4\u0003W+\u0000\u00b3\u00b1\u0001\u0000"+
		"\u0000\u0000\u00b3\u00b2\u0001\u0000\u0000\u0000\u00b4\u00b7\u0001\u0000"+
		"\u0000\u0000\u00b5\u00b3\u0001\u0000\u0000\u0000\u00b5\u00b6\u0001\u0000"+
		"\u0000\u0000\u00b6$\u0001\u0000\u0000\u0000\u00b7\u00b5\u0001\u0000\u0000"+
		"\u0000\u00b8\u00b9\u0005\'\u0000\u0000\u00b9\u00ba\u0003S)\u0000\u00ba"+
		"\u00bb\u0005\'\u0000\u0000\u00bb&\u0001\u0000\u0000\u0000\u00bc\u00c1"+
		"\u0005\"\u0000\u0000\u00bd\u00c0\u0003S)\u0000\u00be\u00c0\u0003U*\u0000"+
		"\u00bf\u00bd\u0001\u0000\u0000\u0000\u00bf\u00be\u0001\u0000\u0000\u0000"+
		"\u00c0\u00c3\u0001\u0000\u0000\u0000\u00c1\u00bf\u0001\u0000\u0000\u0000"+
		"\u00c1\u00c2\u0001\u0000\u0000\u0000\u00c2\u00c4\u0001\u0000\u0000\u0000"+
		"\u00c3\u00c1\u0001\u0000\u0000\u0000\u00c4\u00c5\u0005\"\u0000\u0000\u00c5"+
		"(\u0001\u0000\u0000\u0000\u00c6\u00c7\u0005{\u0000\u0000\u00c7*\u0001"+
		"\u0000\u0000\u0000\u00c8\u00c9\u0005}\u0000\u0000\u00c9,\u0001\u0000\u0000"+
		"\u0000\u00ca\u00cb\u0005[\u0000\u0000\u00cb.\u0001\u0000\u0000\u0000\u00cc"+
		"\u00cd\u0005]\u0000\u0000\u00cd0\u0001\u0000\u0000\u0000\u00ce\u00cf\u0005"+
		"(\u0000\u0000\u00cf2\u0001\u0000\u0000\u0000\u00d0\u00d1\u0005)\u0000"+
		"\u0000\u00d14\u0001\u0000\u0000\u0000\u00d2\u00d3\u0005,\u0000\u0000\u00d3"+
		"6\u0001\u0000\u0000\u0000\u00d4\u00d5\u0005;\u0000\u0000\u00d58\u0001"+
		"\u0000\u0000\u0000\u00d6\u00d7\u0005=\u0000\u0000\u00d7:\u0001\u0000\u0000"+
		"\u0000\u00d8\u00d9\u0005+\u0000\u0000\u00d9\u00da\u0005=\u0000\u0000\u00da"+
		"<\u0001\u0000\u0000\u0000\u00db\u00dc\u0005-\u0000\u0000\u00dc\u00dd\u0005"+
		"=\u0000\u0000\u00dd>\u0001\u0000\u0000\u0000\u00de\u00df\u0007\u0001\u0000"+
		"\u0000\u00df@\u0001\u0000\u0000\u0000\u00e0\u00e6\u0007\u0002\u0000\u0000"+
		"\u00e1\u00e2\u0005<\u0000\u0000\u00e2\u00e6\u0005=\u0000\u0000\u00e3\u00e4"+
		"\u0005>\u0000\u0000\u00e4\u00e6\u0005=\u0000\u0000\u00e5\u00e0\u0001\u0000"+
		"\u0000\u0000\u00e5\u00e1\u0001\u0000\u0000\u0000\u00e5\u00e3\u0001\u0000"+
		"\u0000\u0000\u00e6B\u0001\u0000\u0000\u0000\u00e7\u00e8\u0005=\u0000\u0000"+
		"\u00e8\u00ec\u0005=\u0000\u0000\u00e9\u00ea\u0005!\u0000\u0000\u00ea\u00ec"+
		"\u0005=\u0000\u0000\u00eb\u00e7\u0001\u0000\u0000\u0000\u00eb\u00e9\u0001"+
		"\u0000\u0000\u0000\u00ecD\u0001\u0000\u0000\u0000\u00ed\u00ee\u0005&\u0000"+
		"\u0000\u00ee\u00ef\u0005&\u0000\u0000\u00efF\u0001\u0000\u0000\u0000\u00f0"+
		"\u00f1\u0005|\u0000\u0000\u00f1\u00f2\u0005|\u0000\u0000\u00f2H\u0001"+
		"\u0000\u0000\u0000\u00f3\u00f4\u0007\u0003\u0000\u0000\u00f4\u00f5\u0001"+
		"\u0000\u0000\u0000\u00f5\u00f6\u0006$\u0000\u0000\u00f6J\u0001\u0000\u0000"+
		"\u0000\u00f7\u00f8\u0007\u0004\u0000\u0000\u00f8L\u0001\u0000\u0000\u0000"+
		"\u00f9\u00fa\u00050\u0000\u0000\u00fa\u00fb\u0005x\u0000\u0000\u00fb\u00fd"+
		"\u0001\u0000\u0000\u0000\u00fc\u00fe\u0003K%\u0000\u00fd\u00fc\u0001\u0000"+
		"\u0000\u0000\u00fe\u00ff\u0001\u0000\u0000\u0000\u00ff\u00fd\u0001\u0000"+
		"\u0000\u0000\u00ff\u0100\u0001\u0000\u0000\u0000\u0100N\u0001\u0000\u0000"+
		"\u0000\u0101\u0103\u0003W+\u0000\u0102\u0101\u0001\u0000\u0000\u0000\u0103"+
		"\u0104\u0001\u0000\u0000\u0000\u0104\u0102\u0001\u0000\u0000\u0000\u0104"+
		"\u0105\u0001\u0000\u0000\u0000\u0105P\u0001\u0000\u0000\u0000\u0106\u0107"+
		"\u0005t\u0000\u0000\u0107\u0108\u0005r\u0000\u0000\u0108\u0109\u0005u"+
		"\u0000\u0000\u0109\u0110\u0005e\u0000\u0000\u010a\u010b\u0005f\u0000\u0000"+
		"\u010b\u010c\u0005a\u0000\u0000\u010c\u010d\u0005l\u0000\u0000\u010d\u010e"+
		"\u0005s\u0000\u0000\u010e\u0110\u0005e\u0000\u0000\u010f\u0106\u0001\u0000"+
		"\u0000\u0000\u010f\u010a\u0001\u0000\u0000\u0000\u0110R\u0001\u0000\u0000"+
		"\u0000\u0111\u0115\b\u0005\u0000\u0000\u0112\u0113\u0005\\\u0000\u0000"+
		"\u0113\u0115\u0007\u0006\u0000\u0000\u0114\u0111\u0001\u0000\u0000\u0000"+
		"\u0114\u0112\u0001\u0000\u0000\u0000\u0115T\u0001\u0000\u0000\u0000\u0116"+
		"\u0117\u0005\\\u0000\u0000\u0117\u0118\t\u0000\u0000\u0000\u0118V\u0001"+
		"\u0000\u0000\u0000\u0119\u011b\u0007\u0007\u0000\u0000\u011a\u0119\u0001"+
		"\u0000\u0000\u0000\u011b\u011c\u0001\u0000\u0000\u0000\u011c\u011a\u0001"+
		"\u0000\u0000\u0000\u011c\u011d\u0001\u0000\u0000\u0000\u011dX\u0001\u0000"+
		"\u0000\u0000\f\u0000\u00b3\u00b5\u00bf\u00c1\u00e5\u00eb\u00ff\u0104\u010f"+
		"\u0114\u011c\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}